name: Build & Deploy CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build's
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Enable Corepack and prepare pnpm
        run: |
          corepack enable
          corepack prepare pnpm@10.10.0 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Build server
        run: pnpm --filter @workspace/server... run build

      - name: Build frontend
        run: pnpm --filter @workspace/storefront... run build

  deploy-server:
    name: Deploy Server to Droplet
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Droplet
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            set -e
            echo "--- Navigating to project directory ---"
            cd $HOME/tantovale

            echo "--- Pulling latest changes from Git ---"
            git pull origin main

            echo "--- Checking for Node.js ---"
            if ! command -v node &> /dev/null
            then
                echo "Node.js is not installed. Please install Node.js on the droplet."
                exit 1
            fi

            echo "--- Setting up pnpm via corepack ---"
            corepack enable
            corepack prepare pnpm@10.10.0 --activate

            echo "--- Installing dependencies ---"
            pnpm install

            echo "--- Building server ---"
            if pnpm --filter @workspace/server... run build; then
              echo "Build successful. Restarting application..."
              pm2 restart server
            else
              echo "Build failed. Server will not be restarted."
              exit 1
            fi

  deploy-frontend:
    name: Deploy Frontend to Vercel
    needs: [deploy-server]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Enable Corepack and prepare pnpm
        run: |
          corepack enable
          corepack prepare pnpm@10.10.0 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        working-directory: .
        run: pnpm dlx vercel --prod --yes --token $VERCEL_TOKEN
